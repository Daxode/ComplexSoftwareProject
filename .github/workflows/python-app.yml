# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Blobtory

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8 
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build and Publish
      run: |
        python setup.py bdist_apps
        echo 'YASS<<EOF' >> $GITHUB_ENV
        date >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: v0.1
      with:
        tag_name: ${{jobs.build.env.VERSION}}
        release_name: Release ${{jobs.build.env.VERSION}} ${{jobs.build.env.YASS}}
        draft: false
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: dist/Blobtory-0.1_win_amd64.zip
        asset_name: Blobtory-Version0.1(win64).zip
        asset_content_type: application/zip
